plugins {
    id 'maven'
    id 'java'
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow"
}

group 'com.github.kotlin-graphics'

sourceCompatibility = 1.8

ext {
    moduleName = 'com.github.kotlin_graphics.imgui_vk'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    api project(':imgui-core'), project(':imgui-glfw')
    implementation 'com.github.kotlin-graphics:uno-sdk:0cdc6a342f54ac287eef228fb0d63d241b6c6990'

//    implementation 'com.github.LWJGL:lwjgl3-demos:b402ed620e'

    ["", "-glfw", "-opengl", "-remotery", "-vulkan"].each {
        String base = "org.lwjgl:lwjgl$it:$lwjgl_version"
        implementation base
        if(it == "-vulkan") return
        testRuntime "$base:natives-$lwjgl_natives"
        shadow "$base:natives-$lwjgl_natives"
    }
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task lightJar(type: Jar) {
    classifier = 'light'
    from sourceSets.main.output
    exclude 'extraFonts'
    inputs.property("moduleName", moduleName)
    manifest {
        attributes('Automatic-Module-Name': moduleName)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives lightJar
    archives sourcesJar
//    archives javadocJar
}

shadowJar {
    exclude 'module-info.class'
    inputs.property("moduleName", moduleName)
    manifest.attributes('Automatic-Module-Name': moduleName)
}

jar {
    inputs.property("moduleName", moduleName)
    manifest.attributes('Automatic-Module-Name': moduleName)
}

shadowJar.classifier = 'all'

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}