plugins {
    id 'maven'
    id 'java'
    id "org.jetbrains.kotlin.jvm"
    id "com.github.johnrengelman.shadow"
}

ext.moduleName = "${group}.imgui_vk"

dependencies {
    implementation "$kot-stdlib"
    implementation project(':imgui-core'), project(':imgui-glfw')
    implementation "$kx:uno-sdk:$uno_version"

//    implementation 'com.github.LWJGL:lwjgl3-demos:b402ed620e'

    ["", "-glfw", "-opengl", "-remotery", "-vulkan"].each {
        String base = "org.lwjgl:lwjgl$it:$lwjgl_version"
        implementation base
        if(it == "-vulkan") return
        String natives = "$base:natives-$lwjgl_natives"
        testRuntime natives
        shadow natives
    }
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task lightJar(type: Jar) {
    archiveClassifier = 'light'
    from sourceSets.main.output
    exclude 'extraFonts'
    inputs.property("moduleName", moduleName)
//    manifest.attributes('Automatic-Module-Name': moduleName)
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives lightJar
    archives sourcesJar
//    archives javadocJar
}

shadowJar {
    exclude 'module-info.class'
    inputs.property("moduleName", moduleName)
//    manifest.attributes('Automatic-Module-Name': moduleName)
}

jar {
    inputs.property("moduleName", moduleName)
//    manifest.attributes('Automatic-Module-Name': moduleName)
}

shadowJar.archiveClassifier = 'all'

compileKotlin.kotlinOptions.jvmTarget = "11"
compileTestKotlin.kotlinOptions.jvmTarget = "11"